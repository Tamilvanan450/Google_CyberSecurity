Activity Exemplar: Apply OS hardening techniques

**Section 1: Identify the network protocol involved in the incident**
The primary network protocol involved in this incident is the Hypertext Transfer Protocol (HTTP). HTTP is used for communication between web browsers and web servers, enabling users to access website content. In this case, both the website’s normal content and the malicious file were delivered to users over HTTP, as confirmed by the tcpdump log during the investigation. The attacker exploited HTTP to distribute the malware to visitors’ computers at the application layer

**Section 2: Document the incident**
Several customers contacted the website’s helpdesk reporting that, upon visiting yummyrecipesforme.com, they were prompted to download and run a file that claimed to offer access to new recipes. After running the file, their computers began to operate slowly, and they noticed they were redirected to a different website. Meanwhile, the website owner attempted to log in to the web server but found themselves locked out of the administrator account.

To investigate, the cybersecurity analyst used a sandbox environment to safely access the website and capture network traffic with tcpdump. During this process, the analyst was also prompted to download a file, which was then executed. Immediately after running the file, the browser redirected to a fake website, greatrecipesforme.com.

Reviewing the tcpdump logs, the analyst observed that the browser first requested the IP address for yummyrecipesforme.com and connected to the site using HTTP. After the file was downloaded and executed, there was a noticeable change in network activity, with the browser making a new DNS request for greatrecipesforme.com and subsequently redirecting traffic to this malicious site.

Further analysis by the senior cybersecurity professional revealed that the attacker had injected JavaScript into the website’s source code, causing users to automatically download a malicious file disguised as a browser update. Since the website owner was locked out of their admin account, it was determined that the attacker likely used a brute force attack to gain access and change the admin password. As a result, execution of the malicious file compromised users’ computers and redirected them to the attacker’s fake website.

**Section 3: Recommend one or more remediations for brute force attacks**

1.To protect the server against successful brute force attacks we need to disable previous passwords and default passwords from being used again, as this vulnerability had allowed the attacker to compromise the server successfully using the default password.

2.Another supportive measure is to require more frequent password updates, so in case any unauthorized person becomes aware of the password, they are less likely to be able to use that password if the password is updated sooner than later.

3.Another helpful solution is to implement two-factor authentication (2FA). 2FA requires authentication via a password and also by confirming a one-time passcode (OTP) sent to either their email or phone. Once the user confirms their identity through their login credentials and the OTP, they will gain access to the system. Any malicious actor that attempts a brute force attack will not likely gain access to the system because it requires additional authentication. 


